[
    {
        "name": "Basic Fuzzing",
        "description": "Performs a basic fuzzing scan on a URL with a wordlist.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/admin/ (Status: 200, Size: 1234, Words: 120, Lines: 25)\nhttp://example.com/login/ (Status: 200, Size: 987, Words: 90, Lines: 20)\nhttp://example.com/backup/ (Status: 301, Size: 0, Words: 1, Lines: 1)\nhttp://example.com/robots.txt (Status: 200, Size: 50, Words: 10, Lines: 5)"
    },
    {
        "name": "Fuzzing with Custom Header",
        "description": "Fuzzes a URL with a custom HTTP header.",
        "options": {
            "url_entry": "http://example.com/",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "headers_entry": "X-Forwarded-For: FUZZ"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Headers          : X-Forwarded-For: FUZZ\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/ (Status: 200, Size: 1500, Words: 150, Lines: 30) -> X-Forwarded-For: 127.0.0.1\nhttp://example.com/ (Status: 200, Size: 1500, Words: 150, Lines: 30) -> X-Forwarded-For: 192.168.1.1\nhttp://example.com/ (Status: 403, Size: 200, Words: 20, Lines: 5) -> X-Forwarded-For: evil.com"
    },
    {
        "name": "Fuzzing POST Request",
        "description": "Fuzzes a POST request body.",
        "options": {
            "url_entry": "http://example.com/login",
            "wordlist_entry": "/usr/share/wordlists/rockyou.txt",
            "request_method_select": "POST",
            "data_entry": "username=admin&password=FUZZ"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : POST\n:: URL              : http://example.com/login\n:: Wordlist         : FUZZ: /usr/share/wordlists/rockyou.txt\n:: Data             : username=admin&password=FUZZ\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/login (Status: 200, Size: 1200, Words: 110, Lines: 22) -> Password: password123 (Login Successful)\nhttp://example.com/login (Status: 401, Size: 300, Words: 30, Lines: 8) -> Password: invalidpass\nhttp://example.com/login (Status: 200, Size: 1200, Words: 110, Lines: 22) -> Password: admin123 (Login Successful)"
    },
    {
        "name": "Recursive Fuzzing",
        "description": "Performs recursive fuzzing to discover deeper paths.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "recursion_var": true,
            "recursion_depth_entry": "2"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Recursion        : true (Depth: 2)\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/admin/ (Status: 200, Size: 1234, Words: 120, Lines: 25)\nhttp://example.com/admin/panel/ (Status: 200, Size: 800, Words: 80, Lines: 18)\nhttp://example.com/admin/users/ (Status: 401, Size: 150, Words: 15, Lines: 4)\nhttp://example.com/api/v1/ (Status: 200, Size: 500, Words: 50, Lines: 10)\nhttp://example.com/api/v1/users/ (Status: 200, Size: 300, Words: 30, Lines: 7)"
    },
    {
        "name": "Filter by Status Code",
        "description": "Filters results to show only specific HTTP status codes.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "filter_status_entry": "200,301"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Filter Status    : 200,301\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/index.html (Status: 200, Size: 1500, Words: 150, Lines: 30)\nhttp://example.com/login.php (Status: 200, Size: 900, Words: 80, Lines: 20)\nhttp://example.com/redirect (Status: 301, Size: 0, Words: 1, Lines: 1)"
    },
    {
        "name": "Filter by Response Size",
        "description": "Filters results based on response size.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "filter_size_entry": "100-200"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Filter Size      : 100-200\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/error (Status: 404, Size: 150, Words: 15, Lines: 4)\nhttp://example.com/small_file.txt (Status: 200, Size: 120, Words: 10, Lines: 3)"
    },
    {
        "name": "Match by Status Code",
        "description": "Matches results based on specific HTTP status codes.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "match_status_entry": "200"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Match Status     : 200\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/index.html (Status: 200, Size: 1500, Words: 150, Lines: 30)\nhttp://example.com/assets/ (Status: 200, Size: 700, Words: 60, Lines: 15)"
    },
    {
        "name": "Match by Response Size",
        "description": "Matches results based on response size.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "match_size_entry": "1234"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Match Size       : 1234\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/special_page (Status: 200, Size: 1234, Words: 120, Lines: 25)"
    },
    {
        "name": "Delay between requests",
        "description": "Adds a delay between HTTP requests to avoid detection.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "delay_entry": "0.1"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Delay            : 0.1s\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/public (Status: 200, Size: 500, Words: 50, Lines: 10)\nhttp://example.com/docs (Status: 200, Size: 700, Words: 70, Lines: 12)"
    },
    {
        "name": "Proxy Scan",
        "description": "Routes traffic through a specified proxy.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "proxy_entry": "http://127.0.0.1:8080"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Proxy            : http://127.0.0.1:8080\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/api/ (Status: 200, Size: 400, Words: 40, Lines: 8)\nhttp://example.com/test/ (Status: 200, Size: 600, Words: 55, Lines: 11)"
    },
    {
        "name": "Verbose Output",
        "description": "Shows verbose output during the scan.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "verbose_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Verbose          : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\n[INFO] Fuzzing parameter: FUZZ\n[INFO] Starting fuzzing for http://example.com/FUZZ\n\nhttp://example.com/config.php (Status: 200, Size: 250, Words: 25, Lines: 6)\nhttp://example.com/includes/ (Status: 403, Size: 180, Words: 18, Lines: 5)\n[INFO] Scan completed."
    },
    {
        "name": "Output to File",
        "description": "Saves the scan results to a specified file.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "output_file_entry": "results.json"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Output File      : results.json\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\n[INFO] Results saved to results.json"
    },
    {
        "name": "Fuzzing with Multiple Payloads",
        "description": "Uses multiple FUZZ keywords and wordlists for complex fuzzing.",
        "options": {
            "url_entry": "http://example.com/FUZZ1/FUZZ2",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "wordlist_2_entry": "/usr/share/wordlists/dirb/big.txt"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ1/FUZZ2\n:: Wordlist         : FUZZ1: /usr/share/wordlists/dirb/common.txt\n:: Wordlist         : FUZZ2: /usr/share/wordlists/dirb/big.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/admin/login (Status: 200, Size: 1000, Words: 90, Lines: 20)\nhttp://example.com/api/v1/users (Status: 200, Size: 500, Words: 50, Lines: 10)"
    },
    {
        "name": "Fuzzing with HTTP Method Fuzz",
        "description": "Fuzzes HTTP methods.",
        "options": {
            "url_entry": "http://example.com/",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "request_method_select": "FUZZ"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : FUZZ\n:: URL              : http://example.com/\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/ (Method: GET, Status: 200, Size: 1500, Words: 150, Lines: 30)\nhttp://example.com/ (Method: POST, Status: 405, Size: 200, Words: 20, Lines: 5)\nhttp://example.com/ (Method: OPTIONS, Status: 200, Size: 100, Words: 10, Lines: 3)"
    },
    {
        "name": "Fuzzing with Data Parameter Fuzz",
        "description": "Fuzzes a specific parameter in the POST data.",
        "options": {
            "url_entry": "http://example.com/login",
            "wordlist_entry": "/usr/share/wordlists/rockyou.txt",
            "request_method_select": "POST",
            "data_entry": "username=FUZZ&password=password"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : POST\n:: URL              : http://example.com/login\n:: Wordlist         : FUZZ: /usr/share/wordlists/rockyou.txt\n:: Data             : username=FUZZ&password=password\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/login (Status: 200, Size: 1200, Words: 110, Lines: 22) -> Username: admin (Login Successful)\nhttp://example.com/login (Status: 401, Size: 300, Words: 30, Lines: 8) -> Username: guest"
    },
    {
        "name": "Ignore Content-Length",
        "description": "Ignores Content-Length header when comparing responses.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "ignore_content_length_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Ignore Content-Length: true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/page1 (Status: 200, Size: 500, Words: 50, Lines: 10)\nhttp://example.com/page2 (Status: 200, Size: 500, Words: 50, Lines: 10)"
    },
    {
        "name": "Follow Redirects",
        "description": "Follows HTTP redirects.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "follow_redirects_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Follow Redirects : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/old-page (Status: 301, Size: 0, Words: 1, Lines: 1) -> Redirected to: http://example.com/new-page (Status: 200, Size: 800, Words: 75, Lines: 18)\nhttp://example.com/temp-redirect (Status: 302, Size: 0, Words: 1, Lines: 1) -> Redirected to: http://example.com/final-destination (Status: 200, Size: 600, Words: 60, Lines: 15)"
    },
    {
        "name": "Rate Limit",
        "description": "Sets a maximum number of requests per second.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "rate_limit_entry": "10"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Rate Limit       : 10 req/s\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/resource1 (Status: 200, Size: 300, Words: 30, Lines: 7)\nhttp://example.com/resource2 (Status: 200, Size: 350, Words: 35, Lines: 8)"
    },
    {
        "name": "Timeout",
        "description": "Sets a timeout for HTTP requests.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "timeout_entry": "5"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Timeout          : 5s\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/fast_page (Status: 200, Size: 200, Words: 20, Lines: 5)\n[ERROR] http://example.com/slow_page: connection timed out"
    },
    {
        "name": "User Agent",
        "description": "Sets a custom User-Agent header.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "user_agent_entry": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: User-Agent       : Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/web/ (Status: 200, Size: 800, Words: 75, Lines: 18)\nhttp://example.com/mobile/ (Status: 404, Size: 150, Words: 15, Lines: 4)"
    },
    {
        "name": "Cookie",
        "description": "Sets a custom Cookie header.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "cookie_entry": "PHPSESSID=abcdef123456"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Cookie           : PHPSESSID=abcdef123456\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/profile (Status: 200, Size: 700, Words: 65, Lines: 15)\nhttp://example.com/dashboard (Status: 200, Size: 900, Words: 80, Lines: 20)"
    },
    {
        "name": "Header Fuzzing",
        "description": "Fuzzes a specific header value.",
        "options": {
            "url_entry": "http://example.com/",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "headers_entry": "X-Custom-Header: FUZZ"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Headers          : X-Custom-Header: FUZZ\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/ (Status: 200, Size: 1500, Words: 150, Lines: 30) -> X-Custom-Header: valid_value\nhttp://example.com/ (Status: 403, Size: 200, Words: 20, Lines: 5) -> X-Custom-Header: invalid_value"
    },
    {
        "name": "URL Parameter Fuzzing",
        "description": "Fuzzes a URL parameter.",
        "options": {
            "url_entry": "http://example.com/?param=FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/?param=FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/?param=admin (Status: 200, Size: 1200, Words: 110, Lines: 22)\nhttp://example.com/?param=test (Status: 200, Size: 800, Words: 75, Lines: 18)\nhttp://example.com/?param=root (Status: 403, Size: 200, Words: 20, Lines: 5)"
    },
    {
        "name": "Data Encoding",
        "description": "Encodes POST data.",
        "options": {
            "url_entry": "http://example.com/login",
            "wordlist_entry": "/usr/share/wordlists/rockyou.txt",
            "request_method_select": "POST",
            "data_entry": "username=admin&password=FUZZ",
            "data_encoding_select": "url"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : POST\n:: URL              : http://example.com/login\n:: Wordlist         : FUZZ: /usr/share/wordlists/rockyou.txt\n:: Data             : username=admin&password=FUZZ\n:: Data Encoding    : url\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/login (Status: 200, Size: 1200, Words: 110, Lines: 22) -> Password: password%21\nhttp://example.com/login (Status: 401, Size: 300, Words: 30, Lines: 8) -> Password: %24%24%24"
    },
    {
        "name": "Show All",
        "description": "Shows all results, even those that would normally be filtered.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "show_all_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Show All         : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/index.html (Status: 200, Size: 1500, Words: 150, Lines: 30)\nhttp://example.com/404page (Status: 404, Size: 200, Words: 20, Lines: 5)\nhttp://example.com/forbidden (Status: 403, Size: 180, Words: 18, Lines: 5)"
    },
    {
        "name": "Quiet Mode",
        "description": "Suppresses output except for matches.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "quiet_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Quiet            : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/found_page (Status: 200, Size: 500, Words: 50, Lines: 10)"
    },
    {
        "name": "Colors Output",
        "description": "Enables colored output.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "colors_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Colors           : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\n\u001b[32mhttp://example.com/admin/\u001b[0m (Status: \u001b[32m200\u001b[0m, Size: 1234, Words: 120, Lines: 25)\n\u001b[31mhttp://example.com/nonexistent/\u001b[0m (Status: \u001b[31m404\u001b[0m, Size: 150, Words: 15, Lines: 4)"
    },
    {
        "name": "Request File",
        "description": "Loads HTTP request from a file.",
        "options": {
            "request_file_entry": "request.txt",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Request File     : request.txt\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/api/v1/users (Status: 200, Size: 500, Words: 50, Lines: 10)\nhttp://example.com/api/v1/products (Status: 200, Size: 700, Words: 60, Lines: 12)"
    },
    {
        "name": "Input File",
        "description": "Uses an input file for fuzzing.",
        "options": {
            "input_file_entry": "input.txt",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Input File       : input.txt\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/path/from/input1 (Status: 200, Size: 300, Words: 30, Lines: 7)\nhttp://example.com/path/from/input2 (Status: 404, Size: 150, Words: 15, Lines: 4)"
    },
    {
        "name": "Input Mode",
        "description": "Sets the input mode for fuzzing.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "input_mode_select": "clusterbomb"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Input Mode       : clusterbomb\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/test1/testA (Status: 200, Size: 500, Words: 50, Lines: 10)\nhttp://example.com/test2/testB (Status: 404, Size: 150, Words: 15, Lines: 4)"
    },
    {
        "name": "Threads",
        "description": "Sets the number of concurrent threads.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "threads_entry": "20"
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  /_/  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Threads          : 20\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\nhttp://example.com/fast_dir1 (Status: 200, Size: 300, Words: 30, Lines: 7)\nhttp://example.com/fast_dir2 (Status: 200, Size: 320, Words: 32, Lines: 8)\nhttp://example.com/fast_dir3 (Status: 404, Size: 150, Words: 15, Lines: 4)"
    },
    {
        "name": "Verbose Output with Request/Response",
        "description": "Shows verbose output including full request and response.",
        "options": {
            "url_entry": "http://example.com/FUZZ",
            "wordlist_entry": "/usr/share/wordlists/dirb/common.txt",
            "verbose_var": true,
            "show_request_var": true,
            "show_response_var": true
        },
        "example_output": "        ___  ___  __   __      _  __\n       / _ \\/ _ \\/ /  / /     | |/ /\n      / ___/ ___/ /__/ /__    |   /\n     /_/  / /  /____/____/   /_/\\_\\\n\n :: FFUF is a tool for fuzzing HTTP requests. ::\n────────────────────────────────────────────────\n:: Method           : GET\n:: URL              : http://example.com/FUZZ\n:: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt\n:: Verbose          : true\n:: Show Request     : true\n:: Show Response    : true\n────────────────────────────────────────────────\n:: Progress: [100/100] :: Fuzzing: FUZZ :: Errors: 0 ::\n\n[INFO] Fuzzing parameter: FUZZ\n[INFO] Starting fuzzing for http://example.com/FUZZ\n\n--- Request ---\nGET /admin HTTP/1.1\nHost: example.com\nUser-Agent: FFUF/1.0\n\n--- Response ---\nHTTP/1.1 200 OK\nContent-Length: 1234\nContent-Type: text/html\n\n<html><body><h1>Admin Panel</h1>...</body></html>\n\nhttp://example.com/admin (Status: 200, Size: 1234, Words: 120, Lines: 25)\n\n--- Request ---\nGET /nonexistent HTTP/1.1\nHost: example.com\nUser-Agent: FFUF/1.0\n\n--- Response ---\nHTTP/1.1 404 Not Found\nContent-Length: 150\nContent-Type: text/html\n\n<html><body><h1>404 Not Found</h1>...</body></html>\n\nhttp://example.com/nonexistent (Status: 404, Size: 150, Words: 15, Lines: 4)\n[INFO] Scan completed."
    }
]
