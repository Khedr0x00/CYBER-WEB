# app.py
import subprocess
import os
from flask import Flask, render_template, Response, stream_with_context

app = Flask(__name__)

# Ensure the docker-compose.yml file is in the same directory as app.py,
# or specify the full path to it here.
DOCKER_COMPOSE_FILE = 'docker-compose.yml'

@app.route('/')
def index():
    """Renders the main page of the application."""
    return render_template('index.html')

@app.route('/install')
def install_docker_compose():
    """
    Executes 'docker-compose up -d' and streams the output back to the client.
    """
    def generate():
        # Check if docker-compose.yml exists
        if not os.path.exists(DOCKER_COMPOSE_FILE):
            yield f"Error: {DOCKER_COMPOSE_FILE} not found in the current directory.\n"
            yield "Please ensure the docker-compose.yml file is in the same directory as app.py.\n"
            return

        command = ["docker-compose", "up", "-d"]
        
        yield f"Running command: {' '.join(command)}\n\n"
        
        try:
            # Start the subprocess
            process = subprocess.Popen(
                command,
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT, # Redirect stderr to stdout for combined output
                text=True, # Decode output as text
                bufsize=1, # Line-buffered output
                universal_newlines=True # Ensure consistent newline characters
            )

            # Stream output line by line
            for line in iter(process.stdout.readline, ''):
                yield line
            
            # Wait for the process to finish and get the return code
            process.stdout.close()
            return_code = process.wait()

            if return_code == 0:
                yield "\nDocker Compose command completed successfully!\n"
            else:
                yield f"\nDocker Compose command failed with exit code {return_code}.\n"

        except FileNotFoundError:
            yield "Error: 'docker-compose' command not found.\n"
            yield "Please ensure Docker Compose is installed and accessible in your system's PATH.\n"
        except Exception as e:
            yield f"An unexpected error occurred: {e}\n"

    # Stream the output with a text/plain content type
    return Response(stream_with_context(generate()), mimetype='text/plain')

if __name__ == '__main__':
    # Run the Flask app in debug mode. In a production environment, use a WSGI server.
    app.run(debug=True, host='0.0.0.0', port=5000)
