[
    {
        "name": "Basic Crawl",
        "description": "Performs a basic crawl on the target URL with a depth of 1.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "depth_entry": "1"
        },
        "example_output": "[INFO] Starting Gospider on https://scanme.sh\n[+] https://scanme.sh/\n[+] https://scanme.sh/about\n[+] https://scanme.sh/contact\n[INFO] Gospider finished in 5.23 seconds."
    },
    {
        "name": "Crawl with Subdomains",
        "description": "Crawls the target URL and its subdomains up to a depth of 2.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "subdomains_var": true,
            "depth_entry": "2"
        },
        "example_output": "[INFO] Starting Gospider on https://scanme.sh with subdomains\n[+] https://scanme.sh/index.html\n[+] https://blog.scanme.sh/post1.html\n[+] https://dev.scanme.sh/api/v1/users\n[INFO] Gospider finished in 12.50 seconds."
    },
    {
        "name": "JSON Output",
        "description": "Performs a crawl and outputs results in JSON format.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "json_output_var": true
        },
        "example_output": "{\"url\":\"https://scanme.sh/index.html\",\"status\":200,\"content_type\":\"text/html\"}\n{\"url\":\"https://scanme.sh/about.html\",\"status\":200,\"content_type\":\"text/html\"}"
    },
    {
        "name": "Parse Sitemap and Robots.txt",
        "description": "Parses sitemap.xml and robots.txt for additional URLs to crawl.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "sitemap_var": true,
            "robots_var": true
        },
        "example_output": "[INFO] Parsing sitemap.xml...\n[INFO] Parsing robots.txt...\n[+] https://scanme.sh/sitemap-url-1\n[+] https://scanme.sh/disallowed-path\n[INFO] Gospider finished."
    },
    {
        "name": "Custom User-Agent",
        "description": "Crawls with a specified custom User-Agent string.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "user_agent_entry": "Mozilla/5.0 (BugBountyHunter) Gospider/1.0"
        },
        "example_output": "[INFO] Starting Gospider with custom User-Agent...\n[+] https://scanme.sh/page.html\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl with HTTP Proxy",
        "description": "Routes all Gospider traffic through a specified HTTP proxy.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "proxy_entry": "http://127.0.0.1:8080"
        },
        "example_output": "[INFO] Starting Gospider with proxy http://127.0.0.1:8080...\n[+] https://scanme.sh/data.json\n[INFO] Gospider finished."
    },
    {
        "name": "Exclude Image Extensions",
        "description": "Crawls while excluding URLs ending with common image file extensions.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "exclude_extensions_entry": "jpg,png,gif,svg"
        },
        "example_output": "[INFO] Starting Gospider, excluding images...\n[+] https://scanme.sh/document.pdf\n[+] https://scanme.sh/script.js\n[INFO] Gospider finished."
    },
    {
        "name": "Include Unreachable URLs",
        "description": "Includes URLs that return non-2xx status codes (e.g., 404, 500) in the output.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "include_unreachable_var": true
        },
        "example_output": "[INFO] Starting Gospider, including unreachable URLs...\n[+] https://scanme.sh/valid-page\n[+] https://scanme.sh/non-existent-page (404 Not Found)\n[INFO] Gospider finished."
    },
    {
        "name": "Rate Limit Requests (5/sec)",
        "description": "Limits the number of requests per second to 5 to avoid overwhelming the target server.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "rate_limit_entry": "5"
        },
        "example_output": "[INFO] Starting Gospider with rate limit 5 req/s...\n[+] https://scanme.sh/page1\n[+] https://scanme.sh/page2\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl with Custom Headers",
        "description": "Sends custom HTTP headers with each request during the crawl.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "headers_entry": "X-Custom-Header: MyValue\nAnother-Header: Test"
        },
        "example_output": "[INFO] Starting Gospider with custom headers...\n[+] https://scanme.sh/api/status\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl with Custom Cookie",
        "description": "Sends a custom cookie string with each request.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "cookie_entry": "sessionid=abcdef123456"
        },
        "example_output": "[INFO] Starting Gospider with custom cookie...\n[+] https://scanme.sh/dashboard\n[INFO] Gospider finished."
    },
    {
        "name": "Verbose Output",
        "description": "Enables verbose output for more detailed logging during the crawl.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "verbose_var": true
        },
        "example_output": "[INFO] Starting Gospider with verbose output...\n[DEBUG] Fetching: https://scanme.sh/\n[+] https://scanme.sh/index.html\n[INFO] Gospider finished."
    },
    {
        "name": "No Redirects",
        "description": "Prevents Gospider from following HTTP redirects.",
        "options": {
            "target_url_entry": "https://scanme.sh/old-page",
            "no_redirect_var": true
        },
        "example_output": "[INFO] Starting Gospider, no redirects...\n[+] https://scanme.sh/old-page (301 Moved Permanently)\n[INFO] Gospider finished."
    },
    {
        "name": "Skip SSL Verification",
        "description": "Skips SSL/TLS certificate verification, useful for targets with self-signed certs.",
        "options": {
            "target_url_entry": "https://badssl.com/",
            "skip_ssl_verify_var": true
        },
        "example_output": "[INFO] Starting Gospider, skipping SSL verify...\n[+] https://badssl.com/index.html\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl from URL File",
        "description": "Starts crawling from a list of URLs provided in a file.",
        "options": {
            "url_file_entry": "urls.txt",
            "depth_entry": "1"
        },
        "example_output": "[INFO] Reading URLs from urls.txt...\n[+] http://target.com/page1\n[+] http://target.com/page2\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl with Blacklist Regex",
        "description": "Excludes URLs matching a specific regex pattern.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "blacklist_entry": "admin|dashboard"
        },
        "example_output": "[INFO] Starting Gospider with blacklist...\n[+] https://scanme.sh/home\n[WARN] Blacklisted URL: https://scanme.sh/admin/panel\n[INFO] Gospider finished."
    },
    {
        "name": "Crawl with Whitelist Regex",
        "description": "Only includes URLs matching a specific regex pattern.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "whitelist_entry": "api/v1"
        },
        "example_output": "[INFO] Starting Gospider with whitelist...\n[+] https://scanme.sh/api/v1/users\n[+] https://scanme.sh/api/v1/products\n[INFO] Gospider finished."
    },
    {
        "name": "Burp Suite Output",
        "description": "Outputs results in a format compatible with Burp Suite (useful for importing).",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "burp_output_var": true
        },
        "example_output": "GET / HTTP/1.1\nHost: scanme.sh\nUser-Agent: Gospider/1.0\n\nGET /about HTTP/1.1\nHost: scanme.sh\nUser-Agent: Gospider/1.0\n\n..."
    },
    {
        "name": "Random User-Agent",
        "description": "Uses a random User-Agent string from a built-in list for each request.",
        "options": {
            "target_url_entry": "https://scanme.sh",
            "random_agent_var": true
        },
        "example_output": "[INFO] Starting Gospider with random User-Agents...\n[+] https://scanme.sh/page1\n[+] https://scanme.sh/page2\n[INFO] Gospider finished."
    },
    {
        "name": "POST Request with Data",
        "description": "Performs a POST request with specified data.",
        "options": {
            "target_url_entry": "https://scanme.sh/login",
            "http_method_entry": "POST",
            "post_data_entry": "username=test&password=pass",
            "content_type_entry": "application/x-www-form-urlencoded"
        },
        "example_output": "[INFO] Sending POST request to https://scanme.sh/login with data...\n[INFO] Response status: 200 OK\n[INFO] Gospider finished."
    }
]
